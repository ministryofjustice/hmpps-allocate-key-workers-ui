{% extends "partials/layout.njk" %}
{% from "moj/components/date-picker/macro.njk" import mojDatePicker %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "partials/mojPagination/macro.njk" import mojPagination %}
{% from "partials/deallocateSuccessError/macro.njk" import deallocateSuccessError %}

{% set fullWidth = true %}
{% set pageTitle = "Allocate [staffs] to prisoners" | policyAware(policyName) %}

{% block pageHeader %}
  {{ deallocateSuccessError(apiError, count) }}
{% endblock %}

{% block innerContent %}
  <h1 class="govuk-heading-l govuk-!-margin-bottom-6">{{ pageTitle }}</h1>

  <div class="govuk-width-container">
    <div class="govuk-grid-row">

      <div class="govuk-grid-column-three-quarters">
        <form method="post" action="/{{ policyPath }}/allocate/filter" class="govuk-grid-row govuk-!-margin-bottom-7 govuk-!-padding-6 search-form">
          <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>
          <h2 class="govuk-heading-m">Filter by</h2>
          <div class="horizontal-form">
            {{ govukInput({
              id: "query",
              name: "query",
              value: query,
              classes: "min-width-one-quarter ",
              label: {
                text: 'Name or prison number'
              }
            }) }}

            {{ govukSelect({
              id: "cellLocationPrefix",
              name: "cellLocationPrefix",
              label: {
                text: "Residential location"
              },
              items: locations | addSelectValue('') | setSelectedValue(cellLocationPrefix)
            }) }}

            {{ govukButton({
              text: "Apply filters",
              preventDoubleClick: true
            }) }}
            <a class="govuk-link govuk-link--no-visited-state govuk-body no-label-form-clear-link" href="?clear=true">Clear</a>
          </div>

          {{ govukCheckboxes({
              name: "excludeActiveAllocations",
              classes: "govuk-checkboxes--small govuk-!-margin-top-2",
              items: [
                {
                  value: "true",
                  text: "Prisoners without a " + policyName,
                  checked: excludeActiveAllocations
                }
              ]
            }) }}
        </form>
      </div>
    </div>

    {% if user | hasPermission('allocate') %}
      <div class="govuk-grid-row">
        <div class="govuk-grid-column-three-quarters">
          <p>Use the dropdown lists to assign {{ policyName }}s to prisoners or deallocate them.<br/>Changes will only take affect when you select save.</p>
          <p>Select ‘Assign {{ policyName }}s automatically’ to get {{ policyName }} recommendations for all prisoners without a current {{ policyName }}. You should save any changes you’ve made before selecting this.</p>
        </div>
      </div>
      <div class="govuk-grid-row">
        {{ govukButton({
          text: "Assign " + policyName + "s automatically",
          classes: "govuk-button--secondary float-right govuk-!-margin-bottom-2",
          preventDoubleClick: true,
          href: '/' + policyPath + '/recommend-allocations'
        }) }}
      </div>
    {% endif %}

    <form method="post">
      <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>
      {% set rows = [] %}
      {% for item in records %}
        {% set rows = (rows.push([
          {
            html: '<a class="govuk-link--no-visited-state" target="_blank" href="' + prisonerProfileUrl + '/prisoner/' + item.personIdentifier + '">' + item | lastNameCommaFirstName + "</a><br/>" + item.personIdentifier,
            attributes: {
            "data-sort-value": item | lastNameCommaFirstName
          }
          },
          {
            text: item.location
          },
          {
            text: item.staffMember | lastNameCommaFirstName  | default('-', true)
          },
          {
            html: 'Not applicable - high complexity of need' if item.hasHighComplexityOfNeeds else govukSelect({
              id: "selectStaffMember",
              name: "selectStaffMember",
              text: 'Select ' + policyName,
              formGroup: {
                classes: "govuk-!-margin-0"
              },
              items: staff | excludeCurrentStaffMember(item.staffMember) | conditionallyAddDeallocate(item.staffMember.staffId) | mergePrisonerKeyworkerIds(item.personIdentifier) | addSelectValue('Select ' + policyName)
            }) 
          } if user | hasPermission('allocate') else undefined,
          {
            html: '<a class="govuk-link govuk-link--no-visited-state" href="/' + policyPath + '/prisoner-allocation-history/' + item.personIdentifier + searchQuery + '">View allocation history</a>' if item.hasAllocationHistory else ''
          }
        ] | removeNullish), rows) %}
      {% endfor %}

      {{ mojPagination(records.length) }}

      {{ govukTable({
          attributes: {
            "data-module": "moj-sortable-table"
          },
          classes: 'table-vertical-align-middle govuk-!-margin-top-6 center-align-content',
          head: [
            {
              text: 'Name and prisoner number',
              key: 'name',
              attributes: {
                "aria-sort": "ascending"
              }
            },
            {
              text: "Residential location",
              key: 'location',
              attributes: {
                "aria-sort": "none"
              }
            },
            {
              text: policyName | sentenceCase,
              key: policyName,
              attributes: {
                "aria-sort": "none"
              }
            },
            {
              text: "Change " + policyName,
              key: 'change'
            } if user | hasPermission('allocate') else undefined,
            {
              text: ""
            }
          ] | removeNullish,
          rows: rows
        }) }}

      {{ mojPagination(records.length) }}

      {% if user | hasPermission('allocate') %}
        {{ govukButton({
          text: "Save changes",
          preventDoubleClick: true
        }) }}
      {% endif %}
    </form>
  </div>
{% endblock %}
