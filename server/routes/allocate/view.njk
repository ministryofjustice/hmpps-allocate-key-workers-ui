{% extends "partials/layout.njk" %}
{% from "moj/components/date-picker/macro.njk" import mojDatePicker %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "partials/mojPagination/macro.njk" import mojPagination %}
{% from "partials/deallocateSuccessError/macro.njk" import deallocateSuccessError %}
{% from "partials/alertFlags/macro.njk" import alertFlags %}
{%- from "moj/components/alert/macro.njk" import mojAlert -%}

{% set fullWidth = true %}
{% set pageTitle -%}
  Allocate {{ policyStaffs }} to prisoners
{%- endset %}

{% block pageHeader %}
  {% if allocationResult %}
    {% if allocationResult.type == 'SUCCESS' %}
      {{ mojAlert({
        variant: 'success',
        title: 'Changes made successfully',
        showTitleAsHeading: true,
        text: 'You have successfully allocated '+ (('a ' + policyStaff) if allocationResult.staffCount == 1 else policyStaffs) + ' to ' + allocationResult.count + (' prisoner.' if allocationResult.count == 1 else ' prisoners.'),
        classes: 'govuk-!-margin-bottom-0 govuk-!-margin-top-5'
      }) }}
    {% elseif allocationResult.type == 'NO_CAPACITY_FOR_AUTO_ALLOCATION' %}
      {% set errorHtml %}
      <p>{{ policyStaffs | sentenceCase }} could not be recommended for any prisoners who do not currently have a {{ policyStaff }}. This is because none of your {{ policyStaffs }} have available capacity.</p>
      <p>To assign {{ policyStaffs }} to these prisoners, you can:</p>
      <p>
        <ul class="govuk-list govuk-list--bullet">
          <li>manually select {{ policyStaffs }} for these prisoners using the dropdown lists</li>
          <li>review the capacities of your {{ policyStaffs }} in <a href="/{{ policyPath }}/manage">manage {{ policyStaffs }}</a> and update their capacities in their individual profiles</li>
        </ul>
      </p>
      {% endset %}

      {{ mojAlert({
        variant: 'error',
        title: 'Not enough available capacity to assign any ' + policyStaffs,
        showTitleAsHeading: true,
        html: errorHtml,
        classes: 'govuk-!-margin-bottom-0 govuk-!-margin-top-5'
      }) }}
    {% endif %}
  {% else %}
    {{ deallocateSuccessError(apiError, count) }}
  {% endif %}
{% endblock %}

{% block innerContent %}
  <h1 class="govuk-heading-l govuk-!-margin-bottom-6">{{ pageTitle }}</h1>

  <div class="govuk-width-container">
    <div class="govuk-grid-row">

      <div class="govuk-grid-column-full-width">
        <p class="govuk-!-padding-left-3">You must select or enter text into at least one search option below.</p>

        <form method="post" action="/{{ policyPath }}/allocate/filter" class="govuk-grid-row govuk-!-margin-right-0 govuk-!-margin-left-0 govuk-!-margin-bottom-7 govuk-!-padding-top-4 govuk-!-padding-bottom-2 govuk-!-padding-left-4 govuk-!-padding-right-4 search-form">
          <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>
          <input type="hidden" name="js" value="{{ jsEnabled }}"/>
          <h2 id="searchBy" class="govuk-heading-m">Search by</h2>
          <div class="horizontal-form">
            {{ govukInput({
              id: "query",
              name: "query",
              value: query,
              classes: "min-width-one-quarter",
              label: {
                text: 'Name or prison number'
              }
            }) }}

            {{ govukSelect({
              id: "cellLocationPrefix",
              name: "cellLocationPrefix",
              classes: "min-width-one-quarter",
              label: {
                text: "Residential location"
              },
              items: locations | addSelectValue('') | setSelectedValue(cellLocationPrefix)
            }) }}

            {{ govukCheckboxes({
              name: "excludeActiveAllocations",
              classes: "horizontal-checkbox",
              items: [
                {
                  value: "true",
                  text: "Prisoners without a " + policyStaff,
                  checked: excludeActiveAllocations
                }
              ]
            }) }}

            <br/>
          </div>
          <div class="govuk-button-group govuk-!-margin-top-3 govuk-!-margin-bottom-0">
            {{ govukButton({
                text: "Search",
                preventDoubleClick: true
              }) }}
            <a class="govuk-link govuk-link--no-visited-state" href="/{{ policyPath }}/allocate">Clear</a>
          </div>
        </form>
      </div>
    </div>

    {% if user | hasPermission('allocate') %}
      <div class="govuk-grid-row">
        <div class="govuk-grid-column-three-quarters">
          {% if records and records.length > 0 %}
            <p>Use the dropdown lists to assign {{ policyStaffs }} to prisoners or deallocate them.<br/>Changes will only take affect when you select save.</p>
          {% endif %}
          {% if allowAutoAllocation %}
            <p>Select ‘Assign {{ policyStaffs }} automatically’ to get {{ policyStaff }} recommendations for all prisoners without a current {{ policyStaff }}.{% if records and records.length > 0 %} You should save any changes you’ve made before selecting this.{% endif %}
            </p>
          {% endif %}
        </div>
      </div>
    {% endif %}

    {% if allowAutoAllocation and user | hasPermission('allocate')%}
      <div class="govuk-grid-row">
        {{ govukButton({
          text: "Assign " + policyStaffs + " automatically",
          classes: "govuk-button--secondary float-right govuk-!-margin-bottom-2",
          preventDoubleClick: true,
          href: '/' + policyPath + '/recommend-allocations'
        }) }}
      </div>
    {% endif %}

    {% if records.length == 0 %}
      <p> No results for this search criteria.
    {% elif records.length > 0 %}
        <form method="post">
          <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>
          {% set rows = [] %}
          {% for item in records %}
            {% set rows = (rows.push([
            {
              html: '<a class="govuk-link--no-visited-state" target="_blank" href="' + prisonerProfileUrl + '/prisoner/' + item.personIdentifier + '">' + item | lastNameCommaFirstName + "</a><br/>" + item.personIdentifier,
              attributes: {
                "data-sort-value": item | lastNameCommaFirstName
              }
            },
            {
              text: item.location
            },
            {
              html: alertFlags(prisonerProfileUrl + '/prisoner/' + item.personIdentifier + '/alerts/active', item.relevantAlertCodes, item.remainingAlertCount),
              attributes: {
                "data-sort-value": item | alertsSortValue
              }
            },
            {
              html: ('<a class="govuk-link--no-visited-state" href="staff-profile/' + item.staffMember.staffId + '">' + item.staffMember | lastNameCommaFirstName + " (allocations: " + (item.staffMember.allocationCount or 0) + ") </a>") if item.staffMember else 'None'
            },
            {
              html: 'Not applicable - high complexity of need' if item.hasHighComplexityOfNeeds else govukSelect({
                attributes: {
                  'staff-id': item.staffMember.staffId or '',
                  'person-id': item.personIdentifier
                },
                id: "selectStaffMember",
                classes: 'placeholder-select',
                name: "selectStaffMember",
                text: 'Select ' + policyStaff,
                formGroup: {
                  classes: "govuk-!-margin-0"
                },
                items: ([] | addSelectValue('Select ' + policyStaff, true, '', true)) if jsEnabled else (staff | excludeCurrentStaffMember(item.staffMember) | conditionallyAddDeallocate(item.staffMember.staffId) | mergePrisonerKeyworkerIds(item.personIdentifier) | addSelectValue('Select ' + policyStaff))
              })
            } if user | hasPermission('allocate') else undefined,
            {
              html: '<a class="govuk-link govuk-link--no-visited-state" href="/' + policyPath + '/prisoner-allocation-history/' + item.personIdentifier + '">View allocation history</a>' if item.hasAllocationHistory else ''
            }
          ] | removeNullish), rows) %}
          {% endfor %}

          {{ mojPagination(records.length) }}

          {{ govukTable({
            attributes: {
              "data-module": "moj-sortable-table"
            },
            classes: 'table-vertical-align-middle govuk-!-margin-top-6 center-align-content',
            head: [
              {
                text: 'Name and prisoner number',
                key: 'name',
                attributes: {
                  "aria-sort": "ascending"
                }
              },
              {
                text: "Residential location",
                key: 'location',
                attributes: {
                  "aria-sort": "none"
                }
              },
              {
                text: "Relevant alerts",
                key: 'alerts',
                attributes: {
                  "aria-sort": "none"
                }
              },
              {
                text: policyStaff | sentenceCase,
                key: policyStaff,
                attributes: {
                  "aria-sort": "none"
                }
              },
              {
                text: "Change " + policyStaff,
                key: 'change'
              } if user | hasPermission('allocate') else undefined,
              {
                text: ""
              }
            ] | removeNullish,
            rows: rows
          }) }}

          {{ mojPagination(records.length) }}

          {% if user | hasPermission('allocate') %}
            {% if jsEnabled %}
              <div class="sticky-action-bar">
                <div class="govuk-body sticky-action-bar--label">
                  <strong class="change-count"></strong> <button class="clear-select govuk-body govuk-!-margin-bottom-0">Clear</button>
                </div>
                {{ govukButton({
                  classes: "govuk-!-margin-bottom-0 govuk-button--secondary",
                  text: "Save changes",
                  preventDoubleClick: true
                }) }}
              </div>
            {% else %}
              {{ govukButton({
                text: "Save changes",
                preventDoubleClick: true
              }) }}
            {% endif %}
          {% endif %}
        </form>
      {% endif %}
    </div>
  {% endblock %}


{% block pageScripts %}
  {% if jsEnabled %}
    <script nonce="{{ cspNonce }}">
      window.onload = function () {
        window.initialiseDropdown('{{ policyStaff }}', {{ staff | dump | safe }})
        window.initAllocateStickyAction()
      }
    </script>
    {% endif %}
{% endblock %}
