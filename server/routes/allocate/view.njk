{% extends "partials/layout.njk" %}
{% from "moj/components/date-picker/macro.njk" import mojDatePicker %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "partials/mojPagination/macro.njk" import mojPagination %}
{% from "partials/deallocateSuccessError/macro.njk" import deallocateSuccessError %}
{% from "partials/alertFlags/macro.njk" import alertFlags %}
{%- from "moj/components/alert/macro.njk" import mojAlert -%}

{% set fullWidth = true %}
{% set pageTitle = "Allocate [staffs] to prisoners" | policyAware(policyName) %}

{% block pageHeader %}
  {% if allocationResult %}
    {% if allocationResult.type == 'SUCCESS' %}
      {{ mojAlert({
        variant: 'success',
        title: 'Changes made successfully',
        showTitleAsHeading: true,
        text: 'You have successfully allocated '+ policyName + ' to ' + allocationResult.count + ' prisoners.',
        classes: 'govuk-!-margin-bottom-0 govuk-!-margin-top-5'
      }) }}
    {% elseif allocationResult.type == 'NO_CAPACITY_FOR_AUTO_ALLOCATION' %}
      {% set errorHtml %}
        <p>{{ policyName | sentenceCase }}s could not be recommended for any prisoners who do not currently have a {{ policyName }}. This is because none of your {{ policyName }}s have available capacity.</p>
        <p>To assign {{ policyName }}s to these prisoners, you can:</p>
        <p>
          <ul class="govuk-list govuk-list--bullet">
            <li>manually select {{ policyName }}s for these prisoners using the dropdown lists</li>
            <li>review the capacities of your {{ policyName }}s in <a href="/{{ policyPath }}/manage">manage {{ policyName }}s</a> and update their capacities in their individual profiles</li>
          </ul>
        </p>
      {% endset %}

      {{ mojAlert({
        variant: 'error',
        title: 'Not enough available capacity to assign any ' + policyName + 's',
        showTitleAsHeading: true,
        html: errorHtml,
        classes: 'govuk-!-margin-bottom-0 govuk-!-margin-top-5'
      }) }}
    {% endif %}
  {% else %}
    {{ deallocateSuccessError(apiError, count) }}
  {% endif %}
{% endblock %}

{% block innerContent %}
  <h1 class="govuk-heading-l govuk-!-margin-bottom-6">{{ pageTitle }}</h1>

  <div class="govuk-width-container">
    <div class="govuk-grid-row">

      <div class="govuk-grid-column-full-width">
        <p class="govuk-!-padding-left-3">You must select or enter text into at least one search option below.</p>

        <form method="post" action="/{{ policyPath }}/allocate/filter" class="govuk-grid-row govuk-!-margin-right-0 govuk-!-margin-left-0 govuk-!-margin-bottom-7 govuk-!-padding-top-4 govuk-!-padding-bottom-2 govuk-!-padding-left-4 govuk-!-padding-right-4 search-form">
          <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>
          <h2 id="searchBy" class="govuk-heading-m">Search by</h2>
          <div class="horizontal-form">
            {{ govukInput({
              id: "query",
              name: "query",
              value: query,
              classes: "min-width-one-quarter",
              label: {
                text: 'Name or prison number'
              }
            }) }}

            {{ govukSelect({
              id: "cellLocationPrefix",
              name: "cellLocationPrefix",
              classes: "min-width-one-quarter",
              label: {
                text: "Residential location"
              },
              items: locations | addSelectValue('') | setSelectedValue(cellLocationPrefix)
            }) }}

            {{ govukCheckboxes({
              name: "excludeActiveAllocations",
              classes: "horizontal-checkbox",
              items: [
                {
                  value: "true",
                  text: "Prisoners without a " + policyName,
                  checked: excludeActiveAllocations
                }
              ]
            }) }}

            <br/>
          </div>
          <div class="govuk-button-group govuk-!-margin-top-3 govuk-!-margin-bottom-0">
            {{ govukButton({
                text: "Search",
                preventDoubleClick: true
              }) }}
            <a class="govuk-link govuk-link--no-visited-state" href="/{{ policyPath }}/allocate">Clear</a>
          </div>
        </form>
      </div>
    </div>

    {% if records and records.length > 0 %}
      {% if user | hasPermission('allocate') %}
        <div class="govuk-grid-row">
          <div class="govuk-grid-column-three-quarters">
            <p>Use the dropdown lists to assign {{ policyName }}s to prisoners or deallocate them.<br/>Changes will only take affect when you select save.</p>
            {% if allowAutoAllocation %}
              <p>Select ‘Assign {{ policyName }}s automatically’ to get {{ policyName }} recommendations for all prisoners without a current {{ policyName }}. You should save any changes you’ve made before selecting this.</p>
            {% endif %}
          </div>
        </div>
        {% if allowAutoAllocation %}
          <div class="govuk-grid-row">
            {{ govukButton({
              text: "Assign " + policyName + "s automatically",
              classes: "govuk-button--secondary float-right govuk-!-margin-bottom-2",
              preventDoubleClick: true,
              href: '/' + policyPath + '/recommend-allocations'
            }) }}
          </div>
        {% endif %}
      {% endif %}
    {% endif %}
      {% if records.length == 0 %}
        <p> No results for this search criteria.
      {% elif records.length > 0 %}
        <form method="post">
          <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>
          {% set rows = [] %}
          {% for item in records %}
            {% set rows = (rows.push([
              {
                html: '<a class="govuk-link--no-visited-state" target="_blank" href="' + prisonerProfileUrl + '/prisoner/' + item.personIdentifier + '">' + item | lastNameCommaFirstName + "</a><br/>" + item.personIdentifier,
                attributes: {
                  "data-sort-value": item | lastNameCommaFirstName
                }
              },
              {
                text: item.location
              },
              {
                html: alertFlags(prisonerProfileUrl + '/prisoner/' + item.personIdentifier + '/alerts/active', item.relevantAlertCodes, item.remainingAlertCount),
                attributes: {
                  "data-sort-value": item | alertsSortValue
                }
              },
              {
                html: ('<a class="govuk-link--no-visited-state" href="staff-profile/' + item.staffMember.staffId + '">' + item.staffMember | lastNameCommaFirstName + "</a>") if item.staffMember else 'None'
              },
              {
                html: 'Not applicable - high complexity of need' if item.hasHighComplexityOfNeeds else govukSelect({
                  id: "selectStaffMember",
                  name: "selectStaffMember",
                  text: 'Select ' + policyName,
                  formGroup: {
                    classes: "govuk-!-margin-0"
                  },
                  items: staff | excludeCurrentStaffMember(item.staffMember) | conditionallyAddDeallocate(item.staffMember.staffId) | mergePrisonerKeyworkerIds(item.personIdentifier) | addSelectValue('Select ' + policyName)
                })
              } if user | hasPermission('allocate') else undefined,
              {
                html: '<a class="govuk-link govuk-link--no-visited-state" href="/' + policyPath + '/prisoner-allocation-history/' + item.personIdentifier + '">View allocation history</a>' if item.hasAllocationHistory else ''
              }
            ] | removeNullish), rows) %}
          {% endfor %}

          {{ mojPagination(records.length) }}

          {{ govukTable({
              attributes: {
                "data-module": "moj-sortable-table"
              },
              classes: 'table-vertical-align-middle govuk-!-margin-top-6 center-align-content',
              head: [
                {
                  text: 'Name and prisoner number',
                  key: 'name',
                  attributes: {
                    "aria-sort": "ascending"
                  }
                },
                {
                  text: "Residential location",
                  key: 'location',
                  attributes: {
                    "aria-sort": "none"
                  }
                },
                {
                  text: "Relevant alerts",
                  key: 'alerts',
                  attributes: {
                    "aria-sort": "none"
                  }
                },
                {
                  text: policyName | sentenceCase,
                  key: policyName,
                  attributes: {
                    "aria-sort": "none"
                  }
                },
                {
                  text: "Change " + policyName,
                  key: 'change'
                } if user | hasPermission('allocate') else undefined,
                {
                  text: ""
                }
              ] | removeNullish,
              rows: rows
            }) }}

          {{ mojPagination(records.length) }}

          {% if user | hasPermission('allocate') %}
            {{ govukButton({
              text: "Save changes",
              preventDoubleClick: true
            }) }}
          {% endif %}
        </form>
      {% endif %}
  </div>
{% endblock %}