{% extends "partials/layout.njk" %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "partials/submitButton/macro.njk" import submitButton %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "partials/mojPagination/macro.njk" import mojPagination %}
{% from "partials/deallocateSuccessError/macro.njk" import deallocateSuccessError %}
{% from "partials/alertFlags/macro.njk" import alertFlags %}
{%- from "moj/components/alert/macro.njk" import mojAlert -%}

{% set fullWidth = true %}
{% set pageTitle -%}
{{ policyStaff | sentenceCase }} profile
{%- endset %}

{% block pageHeader %}
  {{ deallocateSuccessError(apiError, count) }}
{% endblock %}

{% block innerContent %}

  <div class="govuk-width-container">

    {% include './components/common.njk' %}

    <ul class="govuk-tabs__list govuk-body govuk-!-margin-bottom-6">
      <li class="govuk-tabs__list-item govuk-tabs__list-item--selected">
        <a class="govuk-tabs__tab" href="#">
          View current allocations
        </a>
      </li>
      <li class="govuk-tabs__list-item">
        <a class="govuk-tabs__tab" href="{{ staffId }}/case-notes">
          View recent case notes
        </a>
      </li>
    </ul>

    {% if user | hasPermission('allocate') %}
      <p>Select {{ policyStaffs }} from the dropdown lists to reallocate or deallocate prisoners.</p>
      <p>{{ policyStaffs | sentenceCase }} will only be allocated when you save your changes.</p>

      <br/>
    {% endif %}

    <h2 class="govuk-heading-m govuk-!-display-inline">Current allocations</h2>

    {% set rows = [] %}
    {% for item in allocations %}
      {% set rows = (rows.push([
          {
            html: '<a class="govuk-link--no-visited-state" href="' + item.profileHref + '">' + item.prisoner | lastNameCommaFirstName + "</a><br/>" + item.prisoner.prisonNumber,
            attributes: {
            "data-sort-value": item.prisoner | lastNameCommaFirstName
          }
          },
          {
            text: item.prisoner.cellLocation
          },
          {
            html: alertFlags(item.alertsHref, item.alertFlagLabels, item.prisoner.remainingAlertCount),
            attributes: {
            "data-sort-value": item.prisoner | alertsSortValue
          }
          },
          {
            text: item.latestSession.occurredAt | formatDateConcise | default('None', true) if item.latestSession else 'None'
          },
          {
            text: item.stats.recordedComplianceEvents or '0',
            attributes: {
            "data-sort-value": item.stats.recordedComplianceEvents
          }
          },
          {
            html: govukSelect({
              attributes: {
                'staff-id': staffId or '',
                'person-id': item.prisoner.prisonNumber,
                'aria-label': 'Select ' + policyStaff
              },
              id: "selectStaffMember",
              classes: 'placeholder-select',
              name: "selectStaffMember",
              text: 'Select ' + policyStaff,
              formGroup: {
                classes: "govuk-!-margin-0"
              },
              items: ([] | addSelectValue('Select ' + policyStaff, true, '', true)) if jsEnabled else (staff | excludeCurrentStaffMember({staffId: staffId}) | conditionallyAddDeallocate(staffId) | mergePrisonerKeyworkerIds(item.prisoner.prisonNumber) | addSelectValue('Select ' + policyStaff) )
            })
          } if user | hasPermission('allocate') else undefined,
          {
            html: '<a class="govuk-link govuk-link--no-visited-state" href="/' + policyPath + '/prisoner-allocation-history/' + item.prisoner.prisonNumber + '">View allocation history</a>'
          }
        ] | removeNullish), rows) %}
    {% endfor %}

    <form method="post" >
      <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>
      {% if allocations.length %}
        {{ mojPagination(allocations.length) }}

        {{ govukTable({
          caption: "Column headers with buttons are sortable.",
          captionClasses: "govuk-visually-hidden",
          attributes: {
            "data-module": "moj-sortable-table"
          },
          classes: 'table-vertical-align-middle govuk-!-margin-top-6 center-align-content',
          head: [
            {
              text: 'Name and prisoner number',
              key: 'name',
              attributes: {
                "aria-sort": "ascending"
              }
            },
            {
              text: "Residential location",
              key: 'location',
              attributes: {
                "aria-sort": "none"
              }
            },
            {
              text: "Relevant alerts",
              key: 'alerts',
              attributes: {
              "aria-sort": "none"
            }
            },
            {
              text: "Most recent session",
              key: 'recentSession',
              attributes: {
                "aria-sort": "none"
              }
            },
            {
              text: "Sessions in last month",
              key: 'sessionCount',
              attributes: {
              "aria-sort": "none"
            }
            },
            {
              text: "Change " + policyStaff
            } if user | hasPermission('allocate') else undefined,
            {
              text: ''
            }
          ] | removeNullish,
          rows: rows
        }) }}

        {{ mojPagination(allocations.length) }}

        {% if user | hasPermission('allocate') %}
          {{ submitButton({
            text: "Save changes",
            preventDoubleClick: true
          }) }}
        {% endif %}

      {% else %}
        <p class="govuk-!-margin-bottom-6">There are no allocations for this {{ policyStaff }}.</p>
      {% endif %}
    </form>
  </div>

{% endblock %}

{% block pageScripts %}
  {% if jsEnabled %}
    <script nonce="{{ cspNonce }}">
      window.onload = function () {
        window.initialiseDropdown?.('{{ policyStaff }}', {{ staff | dump | safe }})
      }
    </script>
    {% endif %}
{% endblock %}
