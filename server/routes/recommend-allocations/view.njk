{% extends "partials/layout.njk" %}
{% from "moj/components/date-picker/macro.njk" import mojDatePicker %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "partials/mojPagination/macro.njk" import mojPagination %}
{% from "partials/deallocateSuccessError/macro.njk" import deallocateSuccessError %}
{% from "partials/alertFlags/macro.njk" import alertFlags %}

{% set fullWidth = true %}
{% set pageTitle = "Allocate [staffs] automatically" | policyAware(policyName) %}

{% block pageHeader %}
  {{ deallocateSuccessError(apiError, count) }}
{% endblock %}

{% block innerContent %}
  <h1 class="govuk-heading-l govuk-!-margin-bottom-6">{{ pageTitle }}</h1>

  <div class="govuk-width-container">
    <div class="govuk-grid-row">
      <div class="govuk-grid-column-three-quarters">
        <p>{{ policyName | sentenceCase }}s have been recommended for the prisoners listed below without a current {{ policyName }}.</p>
        <p>These recommendations prioritise {{ policyName }}s who have:</p>
        <ul class="govuk-list govuk-list--bullet">
          <li>previously been assigned to a specific prisoner</li>
          <li>the most available capacity</li>
        </ul>
        <p>You can change these by selecting alternative {{ policyName }}s from the dropdown menus. {{ policyName | sentenceCase }}s will only be allocated to prisoners when you select save.</p>
      </div>
    </div>
    <form method="post">
      <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>
      {% set rows = [] %}
      {% for item in records %}
        {% set rows = (rows.push([
          {
            html: '<a class="govuk-link--no-visited-state" target="_blank" href="' + prisonerProfileUrl + '/prisoner/' + item.personIdentifier + '">' + item | lastNameCommaFirstName + "</a><br/>" + item.personIdentifier,
            attributes: {
            "data-sort-value": item | lastNameCommaFirstName
          }
          },
          {
            text: item.location
          },
          {
            html: alertFlags(prisonerProfileUrl + '/prisoner/' + item.personIdentifier + '/alerts/active', item.relevantAlertCodes, item.remainingAlertCount),
            attributes: {
              "data-sort-value": item | alertsSortValue
            }
          },
          {
            text: item.staffMember | lastNameCommaFirstName  | default('-', true)
          },
          {
            html: govukSelect({
              id: "selectStaffMember",
              name: "selectStaffMember",
              text: 'Select ' + policyName,
              formGroup: {
                classes: "govuk-!-margin-0"
              },
              items: item.kwDropdown | mergePrisonerKeyworkerIds(item.personIdentifier, item.recommendation) | addSelectValue('Select ' + policyName, true, '', false) | setSelectedValue(item.personIdentifier+ ':allocate:' + item.recommendation + ':auto')
            })
          },
          {
            html: '<a class="govuk-link govuk-link--no-visited-state" href="/' + policyPath + '/prisoner-allocation-history/' + item.personIdentifier + '">View allocation history</a>' if item.hasAllocationHistory else ''
          }
        ] | removeNullish), rows) %}
      {% endfor %}

      {{ mojPagination(records.length) }}

      {{ govukTable({
          attributes: {
            "data-module": "moj-sortable-table"
          },
          classes: 'table-vertical-align-middle govuk-!-margin-top-6 center-align-content',
          head: [
            {
              text: 'Name and prisoner number',
              key: 'name',
              attributes: {
                "aria-sort": "ascending"
              }
            },
            {
              text: "Residential location",
              key: 'location',
              attributes: {
                "aria-sort": "none"
              }
            },
            {
              text: "Relevant alerts",
              key: 'alerts',
              attributes: {
                "aria-sort": "none"
              }
            },
            {
              text: policyName | sentenceCase,
              key: policyName,
              attributes: {
                "aria-sort": "none"
              }
            },
            {
              text: "Change " + policyName,
              key: 'change'
            },
            {
              text: ""
            }
          ] | removeNullish,
          rows: rows
        }) }}

      {{ mojPagination(records.length) }}

      {{ govukButton({
          text: "Save changes",
          preventDoubleClick: true
      }) }}
    </form>
  </div>
{% endblock %}